<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on XuLizhao &#39;s Notes</title>
    <link>https://xulizhao.com/tags/web/</link>
    <description>Recent content in web on XuLizhao &#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 07 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xulizhao.com/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django再记录</title>
      <link>https://xulizhao.com/blog/django/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xulizhao.com/blog/django/</guid>
      <description>&lt;p&gt;Django作为python web开发第一框架,很早就有所了解, 上次使用是在3年多之前. 作为全栈框架来说,是个很优秀的框架.&lt;br&gt;
据我所知Instagram,Mozilla等高流量/大公司都在使用.&lt;br&gt;
之前几个项目特意使用了以轻量著称的Flask,两者算是各有千秋吧.&lt;/p&gt;
&lt;p&gt;去年Django2.0推出后一直想尝试,正好最近拿来试试.&lt;br&gt;
用下来感觉简化部署和可定制化相比之前改观很多,做下简要笔记.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自动生成SSL证书的利器acme.sh</title>
      <link>https://xulizhao.com/blog/acme/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xulizhao.com/blog/acme/</guid>
      <description>&lt;p&gt;已经使用letsencrypt的免费证书一段时间了，是之前折腾Ghost博客时自动安装的，而后台其实也是用的acme.sh这个工具。&lt;/p&gt;
&lt;p&gt;遇到的问题是不知哪里的配置错误，我的证书自动更新有问题，每次都是遇到证书已经过期，网站彻底不能访问了，必须要手动更新。&lt;/p&gt;
&lt;p&gt;之前用的HTTP的验证方式，由于一知半解，这块每次手动配置也会花费一些时间。&lt;/p&gt;
&lt;p&gt;今天重读了&lt;a href=&#34;https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E&#34;&gt;官方文档&lt;/a&gt;，才发现有一些细节的使用，其实可以做到一劳永逸。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flask开发笔记</title>
      <link>https://xulizhao.com/blog/flask/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xulizhao.com/blog/flask/</guid>
      <description>开发基础 创建 Flask Starter Project pip3 install cookiecutter cookiecutter https://github.com/realpython/cookiecutter-flask-skeleton.git 具体使用参考 项目地址 常用第三方 # requirements.txt Flask Flask-Bcrypt Flask-Login Flask-WTF Flask-Bootstrap Flask-DebugToolbar Flask-Testing Flask-Migrate Flask-SQLAlchemy celery 例子 # -- coding: utf-8 -- from flask import Flask, request, make_response, redirect, abort app = Flask(__name__) # route建立请求路</description>
    </item>
    
  </channel>
</rss>